CREATE VIEW Salesperson_Orders AS
SELECT s.S_NUM, s.S_NAME, COUNT(o.O_NUM) AS Total_Orders, AVG(o.AMT) AS Avg_Amount
FROM SALES_PEOPLE s
JOIN ORDERS o ON s.S_NUM = o.S_NUM
GROUP BY s.S_NUM, s.S_NAME;

SELECT * FROM SALESPERSON_ORDERS;

CREATE OR REPLACE VIEW MULTIPLE_CUSTOMERS AS
SELECT s.S_NUM, s.S_NAME, COUNT(c.C_NUM) AS Customer_Count
FROM SALES_PEOPLE s
JOIN CUSTOMERS c ON s.S_NUM = c.S_NUM
GROUP BY s.S_NUM, s.S_NAME
HAVING COUNT(c.C_NUM) > 1;


SELECT * FROM MULTIPLE_CUSTOMERS;

SELECT sp.S_NAME AS Salesperson_Name, c.C_NAME AS Customer_Name, c.CITY
FROM SALES_PEOPLE sp
INNER JOIN CUSTOMERS c ON sp.CITY = c.CITY AND sp.S_NUM = c.S_NUM;

SELECT sp.S_NAME AS Salesperson_Name, sp.COMM AS Commission
FROM SALES_PEOPLE sp
INNER JOIN ORDERS o ON sp.S_NUM = o.S_NUM
INNER JOIN CUSTOMERS c ON sp.CITY = c.CITY AND sp.S_NUM = c.S_NUM
GROUP BY sp.S_NAME,SP.COMM
HAVING COUNT(o.O_NUM) > 3;

SELECT s.S_NUM, s.S_NAME, s.CITY, c.C_NUM, c.C_NAME, c.CITY
FROM SALES_PEOPLE s
CROSS JOIN CUSTOMERS c;

SELECT sp.S_NAME AS Salesperson_Name, c.C_NAME AS Customer_Name, c.CITY
FROM SALES_PEOPLE sp
INNER JOIN CUSTOMERS c ON sp.S_NUM = c.S_NUM;

CREATE TABLE SALES_PEOPLE (
    S_NUM INT PRIMARY KEY,
    S_NAME VARCHAR(50) CHECK (S_NAME >= 'A' AND S_NAME <= 'M'),
    CITY VARCHAR(50),
    COMM DECIMAL(5,2) NOT NULL DEFAULT 0.10
);

CREATE TABLE ORDERS (
    O_NUM INT PRIMARY KEY,
    AMT DECIMAL(10,2) NOT NULL,
    ORDER_DATE DATE,
    C_NUM INT NOT NULL CHECK (O_NUM > C_NUM),
    S_NUM INT NOT NULL CHECK (C_NUM > S_NUM)
);
